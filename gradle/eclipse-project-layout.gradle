/*
 * Since we use the Eclipse Style layout where sources and resources live in the same
 * folders, we need to make some adjustments to Gradle's defaults.
 */

def isTestProject = name.endsWith('tests')
def sourceDirs = ['src', 'xtend-gen', 'src-gen', 'emf-gen']

sourceSets {
	configure(isTestProject? test : main) {
		java {
			srcDirs = sourceDirs
			include '**/*.java', '**/*.xtend'
		}
		resources {
			srcDirs = sourceDirs
			exclude '**/*.java', '**/*.xtend', '**/*.xtendbin', '**/*._trace'
		}
	}
	configure(isTestProject? main : test) {
		java.srcDirs = []
		resources.srcDirs = []
	}
}

jar {
	from ('.') {
		include 'about*.*', 'plugin.xml', 'schema/**', 'model/**', 'plugin.properties'
	}
	if (isTestProject)
		from(sourceSets.test.output)
}

sourcesJar {
	from ('.') {
		include 'about*.*'
	}
}

if (isTestProject || name.contains('example')) {
	tasks.withType(Javadoc) {
		enabled = false
	}
	javadocJar.enabled = false
	uploadArchives.enabled = false
} else {
	artifacts.archives javadocJar
}


eclipse {
	classpath {
		file {
			whenMerged {
				entries.each {
					source ->
					if (source.kind == 'src' && source.path.contains('-gen') && !source.path.endsWith('xtend-gen') ) {
						source.entryAttributes['ignore_optional_problems'] = 'true'
					}
					
				}
			}
		}
	}
}
