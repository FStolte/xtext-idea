package org.eclipse.xtext.idea.sdomain.idea.facet;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;

import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JTextField;

/**
 * Created by dhuebner on 19.06.15.
 */
public class SDomainFacetForm {
    private JCheckBox compilerIsActivatedCheckBox;
    private JTextField directory;
    private JCheckBox createDirectoryIfItCheckBox;
    private JCheckBox overwriteExistingFilesCheckBox;
    private JPanel rootPanel;
    private JCheckBox deleteGenerated;

    public void setData(SDomainGeneratorConfigurationState data) {
        createDirectoryIfItCheckBox.setSelected(data.isCreateDirectory());
        overwriteExistingFilesCheckBox.setSelected(data.isOverwriteExisting());
        deleteGenerated.setSelected(data.isDeleteGenerated());
        compilerIsActivatedCheckBox.setSelected(data.isActivated());
        directory.setText(data.getDirectory());
    }

    public void getData(SDomainGeneratorConfigurationState data) {
        data.setCreateDirectory(createDirectoryIfItCheckBox.isSelected());
        data.setOverwriteExisting(overwriteExistingFilesCheckBox.isSelected());
        data.setDeleteGenerated(deleteGenerated.isSelected());
        data.setActivated(compilerIsActivatedCheckBox.isSelected());
        data.setDirectory(directory.getText());
    }

    public boolean isModified(SDomainGeneratorConfigurationState data) {
        if (createDirectoryIfItCheckBox.isSelected() != data.isCreateDirectory()) return true;
        if (overwriteExistingFilesCheckBox.isSelected() != data.isOverwriteExisting()) return true;
        if (deleteGenerated.isSelected() != data.isDeleteGenerated()) return true;
        if (compilerIsActivatedCheckBox.isSelected() != data.isActivated()) return true;
        if (directory.getText() != null ? !directory.getText().equals(data.getDirectory()) : data.getDirectory() != null)
            return true;
        return false;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        setupUI();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void setupUI() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        rootPanel.add(panel1, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        label1.setFont(new Font(label1.getFont().getName(), Font.BOLD, label1.getFont().getSize()));
        label1.setText("General");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setFont(new Font(label2.getFont().getName(), Font.BOLD, label2.getFont().getSize()));
        label2.setText("Output Folder");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label2, gbc);
        createDirectoryIfItCheckBox = new JCheckBox();
        createDirectoryIfItCheckBox.setText("Create directory if it doesn't exist");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(createDirectoryIfItCheckBox, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Directory:");
        label3.setVerticalAlignment(0);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label3, gbc);
        overwriteExistingFilesCheckBox = new JCheckBox();
        overwriteExistingFilesCheckBox.setText("Overwrite existing files");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(overwriteExistingFilesCheckBox, gbc);
        deleteGenerated = new JCheckBox();
        deleteGenerated.setText("Delete generated files");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(deleteGenerated, gbc);
        compilerIsActivatedCheckBox = new JCheckBox();
        compilerIsActivatedCheckBox.setText("Compiler is activated");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(compilerIsActivatedCheckBox, gbc);
        directory = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(directory, gbc);
        final JSeparator separator1 = new JSeparator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(separator1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        rootPanel.add(panel2, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    public JComponent getRootComponent() {
        return rootPanel;
    }
}
