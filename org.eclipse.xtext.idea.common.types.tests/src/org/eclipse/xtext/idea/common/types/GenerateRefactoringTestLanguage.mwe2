/*******************************************************************************
 * Copyright (c) 2015 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
module org.eclipse.xtext.common.types.xtext.ui.GenerateRefactoringTestLanguage

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*

var projectName = "org.eclipse.xtext.idea.common.types.tests"
var runtimeProject = "../${projectName}"

Workflow {

	component = XtextGenerator {
		configuration = {
			project = model.project.StandardProjectConfig {
				baseName = projectName
				rootPath = ".."
				runtime = {
					manifest = {
						merge = false
					}
					ecoreModel = "${runtimeProject}/src-gen/org/eclipse/xtext/idea/common/types"
				}
				runtimeTest = {
					enabled = true
					manifest = {
						merge = false
					}
					root = runtimeProject
					src = "${runtimeProject}/src"
					srcGen = "${runtimeProject}/src-gen"
				}
				genericIde = {
					enabled = true
					manifest = {
						merge = false
					}
					root = runtimeProject
					src = "${runtimeProject}/src"
					srcGen = "${runtimeProject}/src-gen"
				}
				ideaPlugin = {
					enabled = true
					root = runtimeProject
					src = "${runtimeProject}/src"
					srcGen = "${runtimeProject}/src-gen"
				}
			}
			code = {
				encoding = 'ISO-8859-1'
				fileHeader = 
"/*******************************************************************************
 * Copyright (c) 2015 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/"
			}
		}
		
		language = {
			referencedResource = "platform:/resource/org.eclipse.xtext.common.types/model/JavaVMTypes.genmodel"
			grammarUri = "classpath:/org/eclipse/xtext/idea/common/types/RefactoringTestLanguage.xtext"
			fileExtensions = "ideaTypesRefactoring"
			
			fragment = ecore.EMFGeneratorFragment2 {
				emfRuntimeVersion = "2.9"
				skipGenerate = false
				updateBuildProperties = false
			}
			fragment = grammarAccess.GrammarAccessFragment2 {}
			fragment = resourceFactory.ResourceFactoryFragment2 {}
			fragment = serializer.SerializerFragment2 {
				generateStub = false
			}
			fragment = scoping.ImportNamespacesScopingFragment2 {}
			fragment = exporting.QualifiedNamesFragment2 {}
			fragment = types.TypesGeneratorFragment2 {}
			fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
				options = {
					classSplitting = true
					backtrack = false
					memoize = false
				}
			}
			fragment = idea.IdeaPluginGenerator {}
			fragment = idea.parser.antlr.XtextAntlrIDEAGeneratorFragment {}
		}
	}
}